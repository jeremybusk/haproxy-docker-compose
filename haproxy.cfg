# Docker Example
global
        # stats socket /var/run/api.sock user haproxy group haproxy mode 660 level admin expose-fd listeners
        log stdout format raw local0 info

defaults
        mode http
        timeout client 10s
        timeout connect 5s
        timeout server 10s
        timeout http-request 10s
        log global

frontend stats
    bind *:16443 ssl crt /etc/ssl/certs/myhost.example.com.pem
    stats enable
    stats uri /stats
    stats refresh 10s
    mode http
    stats admin if LOCALHOST
    # stats admin if TRUE
    # stats auth admin:PleaseChangeMe

    #stats auth Username:Password  # Authentication credentials
    # acl network_allowed src 192.168.1.10 10.0.0.0/8
    # stats admin if network_allowed


frontend main
    # BEGIN CORS
    # http-response set-header Access-Control-Allow-Origin "*"
    # http-response set-header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, JSNLog-RequestId, activityId, applicationId, applicationUserId, channelId, senderId, sessionId"
    # http-response set-header Access-Control-Max-Age 3628800
    # http-response set-header Access-Control-Allow-Methods "GET, DELETE, OPTIONS, POST, PUT"
    # END CORS
        bind *:8080
        # bind *:443 ssl crt /etc/ssl/certs/myhost.example.com.pem
        bind *:8443 ssl crt /etc/ssl/certs/
        http-request redirect scheme https unless { ssl_fc }
        # default_backend webservers
        acl host_myhost1.example.com hdr(host) -i myhost1.example.com
        acl host_myhost2.example.com hdr(host) -i myhost2.example.com
        use_backend be_myhost1 if host_myhost.example.com
        use_backend be_myhost2 if host_myhost2.example.com


backend be_myhost1
    balance roundrobin
    # cookie SERVER insert indirect nocache
    cookie MYSRVNAME insert
    server myhost1-1 192.168.168.11:443 cookie S01 check maxconn 20 ssl verify none
    server myhost1-2 192.168.168.12:443 cookie S01 check maxconn 20 ssl verify none

backend be_myhost2
    server myhost2-1 192.168.168.51:443 check maxconn 20 ssl verify none
